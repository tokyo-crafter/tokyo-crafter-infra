name: Terraform

on:
  push:
    branches:
      - master
      - develop
    paths:
      - "gameserver/**"
  pull_request:
    branches:
      - master
      - develop
    types:
      - opened
      - synchronize
    paths:
      - "gameserver/**"

jobs:
  preparation:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.check_environment.outputs.environment }}
    steps:
      - id: check_environment
        name: check environment
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            BRANCH=${GITHUB_REF#refs/heads/};
          else
            BRANCH=${GITHUB_HEAD_REF#refs/heads/};
          fi

          if [[ $BRANCH == "master" ]]; then
            ENVIRONMENT="prd";
          else
            ENVIRONMENT="dev";
          fi

          echo "ENVIRONMENT = $ENVIRONMENT"
          echo "::set-output name=environemnt::$ENVIRONMENT"

  terraform:
    name: Terraform
    needs:
      - preparation
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: "./gameserver/env/${{ env.environment }}"
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_ACCESS_TOKEN }}

      - id: fmt
        name: check format
        run: terraform fmt -check -recursive

      - id: init
        name: init
        run: terraform init

      - id: plan
        name: check plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        continue-on-error: true

      - id: status
        name: check plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - id: apply
        name: apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve
